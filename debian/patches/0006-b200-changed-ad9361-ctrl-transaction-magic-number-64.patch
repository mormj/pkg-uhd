From da99b7edc2d1cfedd9c8acf36630d799782ee455 Mon Sep 17 00:00:00 2001
From: Balint Seeber <balint@ettus.com>
Date: Wed, 19 Mar 2014 16:19:46 -0700
Subject: [PATCH 06/15] b200: changed ad9361 ctrl/transaction magic number 64
 to macro, as it is in the FX3 FW

---
 host/lib/usrp/b200/b200_iface.cpp         |    6 +++---
 host/lib/usrp/common/ad9361_ctrl.hpp      |   16 +++++++++-------
 host/lib/usrp/common/ad9361_transaction.h |    5 +++--
 3 files changed, 15 insertions(+), 12 deletions(-)

--- a/host/lib/usrp/b200/b200_iface.cpp
+++ b/host/lib/usrp/b200/b200_iface.cpp
@@ -305,9 +305,9 @@
         }
     }
 
-    void ad9361_transact(const unsigned char in_buff[64], unsigned char out_buff[64]) {
-        const int bytes_to_write = 64;
-        const int bytes_to_read = 64;
+    void ad9361_transact(const unsigned char in_buff[AD9361_DISPATCH_PACKET_SIZE], unsigned char out_buff[AD9361_DISPATCH_PACKET_SIZE]) {
+        const int bytes_to_write = AD9361_DISPATCH_PACKET_SIZE;
+        const int bytes_to_read = AD9361_DISPATCH_PACKET_SIZE;
         const size_t read_retries = 5;
 
         int ret = fx3_control_write(B200_VREQ_AD9361_CTRL_WRITE, 0x00, 0x00, (unsigned char *)in_buff, bytes_to_write);
--- a/host/lib/usrp/common/ad9361_ctrl.hpp
+++ b/host/lib/usrp/common/ad9361_ctrl.hpp
@@ -27,6 +27,8 @@
 #include <vector>
 #include <string>
 
+#include "ad9361_transaction.h"
+
 
 static const double AD9361_CLOCK_RATE_MAX = 61.44e6;
 static const double AD9361_1_CHAN_CLOCK_RATE_MAX = AD9361_CLOCK_RATE_MAX;
@@ -35,7 +37,7 @@
 
 struct ad9361_ctrl_iface_type
 {
-    virtual void ad9361_transact(const unsigned char in_buff[64], unsigned char out_buff[64]) = 0;
+    virtual void ad9361_transact(const unsigned char in_buff[AD9361_DISPATCH_PACKET_SIZE], unsigned char out_buff[AD9361_DISPATCH_PACKET_SIZE]) = 0;
 };
 typedef boost::shared_ptr<ad9361_ctrl_iface_type> ad9361_ctrl_iface_sptr;
 
@@ -47,18 +49,18 @@
         _xport = xport;
     }
 
-    void ad9361_transact(const unsigned char in_buff[64], unsigned char out_buff[64])
+    void ad9361_transact(const unsigned char in_buff[AD9361_DISPATCH_PACKET_SIZE], unsigned char out_buff[AD9361_DISPATCH_PACKET_SIZE])
     {
         {
             uhd::transport::managed_send_buffer::sptr buff = _xport->get_send_buff(10.0);
-            if (not buff or buff->size() < 64) throw std::runtime_error("ad9361_ctrl_over_zc send timeout");
-            std::memcpy(buff->cast<void *>(), in_buff, 64);
-            buff->commit(64);
+            if (not buff or buff->size() < AD9361_DISPATCH_PACKET_SIZE) throw std::runtime_error("ad9361_ctrl_over_zc send timeout");
+            std::memcpy(buff->cast<void *>(), in_buff, AD9361_DISPATCH_PACKET_SIZE);
+            buff->commit(AD9361_DISPATCH_PACKET_SIZE);
         }
         {
             uhd::transport::managed_recv_buffer::sptr buff = _xport->get_recv_buff(10.0);
-            if (not buff or buff->size() < 64) throw std::runtime_error("ad9361_ctrl_over_zc recv timeout");
-            std::memcpy(out_buff, buff->cast<const void *>(), 64);
+            if (not buff or buff->size() < AD9361_DISPATCH_PACKET_SIZE) throw std::runtime_error("ad9361_ctrl_over_zc recv timeout");
+            std::memcpy(out_buff, buff->cast<const void *>(), AD9361_DISPATCH_PACKET_SIZE);
         }
     }
 
--- a/host/lib/usrp/common/ad9361_transaction.h
+++ b/host/lib/usrp/common/ad9361_transaction.h
@@ -25,8 +25,8 @@
 #endif
 
 //various constants
-#define AD9361_TRANSACTION_VERSION 0x4
-#define AD9361_TRANSACTION_MAX_ERROR_MSG 40
+#define AD9361_TRANSACTION_VERSION  0x4
+#define AD9361_DISPATCH_PACKET_SIZE 64
 
 //action types
 #define AD9361_ACTION_ECHO 0
@@ -100,6 +100,7 @@
 
 } ad9361_transaction_t;
 
+#define AD9361_TRANSACTION_MAX_ERROR_MSG (AD9361_DISPATCH_PACKET_SIZE - (sizeof(ad9361_transaction_t)-4)-1)	// -4 for 'error_msg' alignment padding, -1 for terminating \0
 
 #ifdef __cplusplus
 }
